{"ast":null,"code":"var _jsxFileName = \"F:\\\\pylhr_projects\\\\Load_balance_simulator\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ws = new WebSocket('ws://localhost:8080');\nconst App = () => {\n  _s();\n  const [servers, setServers] = useState([{\n    name: 'Server1',\n    weight: 5,\n    connections: 0,\n    responseTime: 100\n  }, {\n    name: 'Server2',\n    weight: 1,\n    connections: 0,\n    responseTime: 200\n  }, {\n    name: 'Server3',\n    weight: 1,\n    connections: 0,\n    responseTime: 300\n  }]);\n  const [algorithm, setAlgorithm] = useState('RoundRobin');\n  useEffect(() => {\n    ws.onmessage = message => {\n      const {\n        type,\n        payload\n      } = JSON.parse(message.data);\n      if (type === 'RESPONSE') {\n        setServers(prevServers => prevServers.map(server => server.name === payload.name ? {\n          ...server,\n          connections: server.connections + 1\n        } : server));\n      }\n      if (type === 'ALGORITHM_SET') {\n        console.log(`Algorithm set to ${payload}`);\n      }\n      if (type === 'UPDATE_RESPONSE_TIMES') {\n        setServers(payload);\n      }\n    };\n  }, []);\n  const sendRequest = () => {\n    ws.send(JSON.stringify({\n      type: 'REQUEST'\n    }));\n  };\n  const changeAlgorithm = algo => {\n    setAlgorithm(algo);\n    ws.send(JSON.stringify({\n      type: 'SET_ALGORITHM',\n      payload: algo\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Load Balancer Simulator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Select Algorithm: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: algorithm,\n        onChange: e => changeAlgorithm(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"RoundRobin\",\n          children: \"Round Robin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"WeightedRoundRobin\",\n          children: \"Weighted Round Robin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"LeastConnections\",\n          children: \"Least Connections\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"LeastResponseTime\",\n          children: \"Least Response Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"IPHash\",\n          children: \"IP Hash\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendRequest,\n      children: \"Send Request\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"servers\",\n      children: servers.map(server => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"server\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: server.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Connections: \", server.connections]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Weight: \", server.weight]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Response Time: \", server.responseTime, \"ms\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)]\n      }, server.name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"cbO+xi1jzbsXBxKWCJMbZWESl/Y=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ws","WebSocket","App","_s","servers","setServers","name","weight","connections","responseTime","algorithm","setAlgorithm","onmessage","message","type","payload","JSON","parse","data","prevServers","map","server","console","log","sendRequest","send","stringify","changeAlgorithm","algo","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["F:/pylhr_projects/Load_balance_simulator/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nconst ws = new WebSocket('ws://localhost:8080');\n\nconst App = () => {\n  const [servers, setServers] = useState([\n    { name: 'Server1', weight: 5, connections: 0, responseTime: 100 },\n    { name: 'Server2', weight: 1, connections: 0, responseTime: 200 },\n    { name: 'Server3', weight: 1, connections: 0, responseTime: 300 }\n  ]);\n  const [algorithm, setAlgorithm] = useState('RoundRobin');\n\n  useEffect(() => {\n    ws.onmessage = (message) => {\n      const { type, payload } = JSON.parse(message.data);\n      if (type === 'RESPONSE') {\n        setServers((prevServers) =>\n          prevServers.map((server) =>\n            server.name === payload.name ? { ...server, connections: server.connections + 1 } : server\n          )\n        );\n      }\n      if (type === 'ALGORITHM_SET') {\n        console.log(`Algorithm set to ${payload}`);\n      }\n      if (type === 'UPDATE_RESPONSE_TIMES') {\n        setServers(payload);\n      }\n    };\n  }, []);\n\n  const sendRequest = () => {\n    ws.send(JSON.stringify({ type: 'REQUEST' }));\n  };\n\n  const changeAlgorithm = (algo) => {\n    setAlgorithm(algo);\n    ws.send(JSON.stringify({ type: 'SET_ALGORITHM', payload: algo }));\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Load Balancer Simulator</h1>\n      <div>\n        <label>Select Algorithm: </label>\n        <select value={algorithm} onChange={(e) => changeAlgorithm(e.target.value)}>\n          <option value=\"RoundRobin\">Round Robin</option>\n          <option value=\"WeightedRoundRobin\">Weighted Round Robin</option>\n          <option value=\"LeastConnections\">Least Connections</option>\n          <option value=\"LeastResponseTime\">Least Response Time</option>\n          <option value=\"IPHash\">IP Hash</option>\n        </select>\n      </div>\n      <button onClick={sendRequest}>Send Request</button>\n      <div className=\"servers\">\n        {servers.map((server) => (\n          <div key={server.name} className=\"server\">\n            <h3>{server.name}</h3>\n            <p>Connections: {server.connections}</p>\n            <p>Weight: {server.weight}</p>\n            <p>Response Time: {server.responseTime}ms</p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}